<div id="root"></div>
<script type="text/javascript">
  window.initialState = {
    session: {
      userId: "<%= @user.id %>",
      token: "<%= assigns[:user_token] %>",
      jwt: "<%= @jwt %>",
    },
    focus: {
      roomId: "<%= @status.room_id %>",
      workspaceId: "<%= @status.workspace_id %>",
    },
    room: {
      userIdsByRoom: {},
      roomIdsByWorkspace: {
	"<%= @workspace.id %>": [<%= raw(Enum.join(Enum.map(@rooms, fn (r) -> "\"#{r.id}\"" end), ", ")) %>],
      }
    },
    status: {
      "<%= @status.user_id %>": "<%= @status.id %>"
    },
    entities: {
      workspaces: [
	  <%= raw(Jason.encode!(render(SwayWeb.WorkspaceView, "workspace.json", workspace: @workspace))) %>
      ],
      memberships: [
	  <%= raw(Jason.encode!(render(SwayWeb.MembershipView, "membership.json", membership: @membership))) %>
      ],
      users: [
	<%= raw(Jason.encode!(render(SwayWeb.UserView, "user.json", user: @user))) %>
      ],
      rooms: [
	<%= for room <- @rooms do %>
	  <%= raw(Jason.encode!(render(SwayWeb.RoomView, "room.json", room: room))) %>,
	<%= end %>
      ],
      statuses: [
	  <%= if @status != nil do %>
	  <%= raw(Jason.encode!(render(SwayWeb.StatusView, "status.json", status: @status))) %>,
	  <%= end %>
      ]
    }
  }

  <%= if assigns[:fake_state] && Mix.env == :dev do %>
  <%= render "fake_state.html", assigns %>
  <%= end %>

</script>
<script defer phx-track-static type="text/javascript" src={Routes.static_path(@conn, "/assets/app.js")}></script>
